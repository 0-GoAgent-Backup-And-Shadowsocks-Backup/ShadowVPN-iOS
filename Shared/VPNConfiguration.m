// Generated by json_to_model

#import "VPNConfiguration.h"

@implementation VPNConfiguration  {

}

- (id)initWithJSONDictionary:(NSDictionary *)dictionary {

    self = [super init];
    if (![dictionary isKindOfClass:[NSDictionary class]])
        return nil;

    if (self) {
 
        self.chnroutes = (dictionary[@"chnroutes"] != [NSNull null]) ? [dictionary[@"chnroutes"] boolValue] : NO;
  
        self.server = (dictionary[@"server"] != [NSNull null]) ? dictionary[@"server"] : nil;
  
        self.confDescription = (dictionary[@"conf_description"] != [NSNull null]) ? dictionary[@"conf_description"] : nil;
  
        self.dns = (dictionary[@"dns"] != [NSNull null]) ? dictionary[@"dns"] : nil;
  
        self.usertoken = (dictionary[@"usertoken"] != [NSNull null]) ? dictionary[@"usertoken"] : nil;
  
        self.password = (dictionary[@"password"] != [NSNull null]) ? dictionary[@"password"] : nil;
  
        self.port = (dictionary[@"port"] != [NSNull null]) ? [dictionary[@"port"] integerValue] : 0;
 
    }
    return self;
}

- (id)initWithJSONData:(NSData *)data {
    self = [super init];
    if (self) {
        NSError *error = nil;
        id result = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];
        if (result) {
            self = [self initWithJSONDictionary:result];
        } else {
            return nil;
        }
    }
    return self;
}

- (NSDictionary *)JSONDictionary {

    NSMutableDictionary *dictionary = [[NSMutableDictionary alloc] init];

 
    dictionary[@"chnroutes"] = @(self.chnroutes);
  
    dictionary[@"server"] = (self.server != nil) ? self.server : [NSNull null];
  
    dictionary[@"conf_description"] = (self.confDescription != nil) ? self.confDescription : [NSNull null];
  
    dictionary[@"dns"] = (self.dns != nil) ? self.dns : [NSNull null];
  
    dictionary[@"usertoken"] = (self.usertoken != nil) ? self.usertoken : [NSNull null];
  
    dictionary[@"password"] = (self.password != nil) ? self.password : [NSNull null];
  
    dictionary[@"port"] = @(self.port);
 
    return dictionary;
}


- (NSData *)JSONData {
    NSError *error = nil;
    NSData *data = [NSJSONSerialization dataWithJSONObject:[self JSONDictionary] options:0 error:&error];
    if (error) {
        @throw error;
    }
    return data;
}


@end